// ElasticMQ README copy-pasta
include classpath("application.conf")

node-address {
    protocol = http
    host = "*"
    port = 9324
    context-path = ""
}

rest-sqs {
    enabled = true
    bind-port = 9324
    bind-hostname = "0.0.0.0"
    // Possible values: relaxed, strict
    sqs-limits = strict
}

// Should the node-address be generated from the bind port/hostname
// Set this to true e.g. when assigning port automatically by using port 0.
generate-node-address = false

// test-queue is required for integration tests
// to not share "real" queues which our workers
// can start to observe at startup and therefore steal messages from test cases
// It happened to me. Should not happen ever again.
queues {
   test-queue-1{ }
   test-queue-2{ }
   test-queue-3{ }
   dummy{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "dummy-dead-letters"
            maxReceiveCount = 3
        }
   }
   dummy-dead-letters{ }
   api-inbox{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "api-inbox-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    api-inbox-dead-letters{ }
    bc-inbox{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "bc-inbox-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    bc-inbox-dead-letters{ }
    message-updates{
      defaultVisibilityTimeout = 10 seconds
      delay = 5 seconds
      receiveMessageWait = 0 seconds
      deadLettersQueue {
          name = "message-updates-dead-letters"
          maxReceiveCount = 3 // from 1 to 1000
      }
    }
    message-updates-dead-letters{}
    channel-pending-messages{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "channel-pending-messages-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    channel-pending-messages-dead-letters{ }
    publish-outbox{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "publish-outbox-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    publish-outbox-dead-letters{ }
    notifications{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "notifications-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    notifications-dead-letters{ }
    delivery-outbox{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "delivery-outbox-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    delivery-outbox-dead-letters{ }
    object-retrieval{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "object-retrieval-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    object-retrieval-dead-letters{ }
    rejected-messages{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "rekected-messages-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    rejected-messages-dead-letters{ }

    channel-notifications-inbox{
        defaultVisibilityTimeout = 10 seconds
        delay = 5 seconds
        receiveMessageWait = 0 seconds
        deadLettersQueue {
            name = "channel-notifications-inbox-dead-letters"
            maxReceiveCount = 3 // from 1 to 1000
        }
    }
    channel-notifications-inbox-dead-letters{ }

}
